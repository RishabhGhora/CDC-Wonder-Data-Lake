{"ast":null,"code":"import _defineProperty from \"/Users/rishabhghora/Desktop/Codes/wonder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/rishabhghora/Desktop/Codes/wonder/src/menus/Demographic.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport './Demographic.css';\n\nclass Demographic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        collapse: !this.state.collapse\n      });\n    };\n\n    this.state = {\n      collapse: false,\n      dropDownOpen: false,\n      demographic: 'All Demographics'\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          collapse = _this$state.collapse,\n          dropDownOpen = _this$state.dropDownOpen,\n          demographic = _this$state.demographic;\n    return React.createElement(\"div\", {\n      className: \"demographic-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggle,\n      style: {\n        fontSize: '20px',\n        height: '45px',\n        marginBottom: '1rem',\n        width: '400px',\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Demographics\", collapse ? React.createElement(\"p\", {\n      className: \"plus-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"-\") : React.createElement(\"p\", {\n      className: \"plus-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Current filters: \", demographic), React.createElement(Collapse, {\n      isOpen: collapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"demographic-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Choose type\", React.createElement(Dropdown, {\n      isOpen: dropDownOpen,\n      toggle: this.toggle2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"subcategories\"), React.createElement(DropdownMenu, {\n      modifiers: {\n        setMaxHeight: {\n          enabled: true,\n          order: 890,\n          fn: data => {\n            return _objectSpread({}, data, {\n              styles: _objectSpread({}, data.styles, {\n                overflow: 'auto',\n                maxHeight: 200\n              })\n            });\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('All Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"All Cancer\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Adrenal Gland Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Adrenal Gland\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Bladder Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Bladder\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Bone Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Bone\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Brain Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Brain\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Breast Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Brease\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Cervical Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Cervical\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Gastric Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Gastric\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Kidney Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Kidney\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Liver Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Liver\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Lung Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Lung\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Oral Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Oral\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Pancreatic Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Pancreatic\"), React.createElement(DropdownItem, {\n      onClick: () => this.updateSubcategory('Skin Cancer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Skin Cancer\")))))));\n  }\n\n}\n\nexport default Demographic;","map":{"version":3,"sources":["/Users/rishabhghora/Desktop/Codes/wonder/src/menus/Demographic.js"],"names":["React","Component","Collapse","Button","CardBody","Card","Demographic","constructor","props","toggle","setState","collapse","state","dropDownOpen","demographic","render","fontSize","height","marginBottom","width","textAlign","toggle2","setMaxHeight","enabled","order","fn","data","styles","overflow","maxHeight","updateSubcategory"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,YAAjD;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAClCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,MATmB,GASV,MAAM;AACb,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADV,OAAd;AAGD,KAbkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE,KADC;AAEXE,MAAAA,YAAY,EAAE,KAFH;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAMD;;AAODC,EAAAA,MAAM,GAAG;AAAA,wBACyC,KAAKH,KAD9C;AAAA,UACCD,QADD,eACCA,QADD;AAAA,UACWE,YADX,eACWA,YADX;AAAA,UACyBC,WADzB,eACyBA,WADzB;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKL,MAAtC;AAA8C,MAAA,KAAK,EAAE;AAAEO,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,MAAM,EAAE,MAA5B;AAAoCC,QAAAA,YAAY,EAAE,MAAlD;AAA0DC,QAAAA,KAAK,EAAE,OAAjE;AAA0EC,QAAAA,SAAS,EAAE;AAArF,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEKT,QAAQ,GAAG;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAH,GAAsC;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFnD,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsBG,WAAtB,CANF,EAOE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAEH,QADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAK,MAAA,SAAS,EAAE,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEA,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEE,YAAlB;AAAgC,MAAA,MAAM,EAAE,KAAKQ,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,cAAD;AAAgB,MAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAIA,oBAAC,YAAD;AACI,MAAA,SAAS,EAAE;AACXC,QAAAA,YAAY,EAAE;AACdC,UAAAA,OAAO,EAAE,IADK;AAEdC,UAAAA,KAAK,EAAE,GAFO;AAGdC,UAAAA,EAAE,EAAGC,IAAD,IAAU;AACd,qCACOA,IADP;AAEIC,cAAAA,MAAM,oBACHD,IAAI,CAACC,MADF;AAENC,gBAAAA,QAAQ,EAAE,MAFJ;AAGNC,gBAAAA,SAAS,EAAE;AAHL;AAFV;AAQC;AAZa;AADH,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAiBA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKC,iBAAL,CAAuB,YAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBA,EAkBA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,sBAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAlBA,EAmBA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,gBAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnBA,EAoBA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,aAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBA,EAqBA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,cAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArBA,EAsBA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,eAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBA,EAuBA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,iBAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBA,EAwBA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,gBAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAxBA,EAyBA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,eAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBA,EA0BA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,cAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA1BA,EA2BA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,aAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BA,EA4BA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,aAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BA,EA6BA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,mBAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7BA,EA8BA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,aAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA9BA,CAJA,CAFA,CADN,CAHF,CAPF,CADF;AAwDD;;AA1EiC;;AA8EpC,eAAexB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport './Demographic.css';\n\nclass Demographic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      dropDownOpen: false,\n      demographic: 'All Demographics',\n    }\n\n  }\n  toggle = () => {\n    this.setState({\n      collapse: !this.state.collapse,\n    })\n  };\n\n  render() {\n    const { collapse, dropDownOpen, demographic } = this.state;\n    return (\n      <div className=\"demographic-container\">\n        <Button color=\"primary\" onClick={this.toggle} style={{ fontSize: '20px', height: '45px', marginBottom: '1rem', width: '400px', textAlign: 'left' }}>\n            Demographics \n            {collapse ? <p className=\"plus-button\">-</p> : <p className=\"plus-button\">+</p> }\n\n          </Button>\n        <h5>Current filters: {demographic}</h5>\n        <Collapse\n          isOpen={collapse}\n        >\n          <div className =\"demographic-card\">\n                <h1>\n                Choose type\n                <Dropdown isOpen={dropDownOpen} toggle={this.toggle2}>\n                <DropdownToggle caret>\n                subcategories\n                </DropdownToggle>\n                <DropdownMenu \n                    modifiers={{\n                    setMaxHeight: {\n                    enabled: true,\n                    order: 890,\n                    fn: (data) => {\n                    return {\n                        ...data,\n                        styles: {\n                        ...data.styles,\n                        overflow: 'auto',\n                        maxHeight: 200,\n                        },\n                    };\n                    },\n                    },\n                }}>\n                <DropdownItem onClick={() => this.updateSubcategory('All Cancer')}>All Cancer</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Adrenal Gland Cancer')}>Adrenal Gland</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Bladder Cancer')}>Bladder</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Bone Cancer')}>Bone</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Brain Cancer')}>Brain</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Breast Cancer')}>Brease</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Cervical Cancer')}>Cervical</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Gastric Cancer')}>Gastric</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Kidney Cancer')}>Kidney</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Liver Cancer')}>Liver</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Lung Cancer')}>Lung</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Oral Cancer')}>Oral</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Pancreatic Cancer')}>Pancreatic</DropdownItem>\n                <DropdownItem onClick={() => this.updateSubcategory('Skin Cancer')}>Skin Cancer</DropdownItem>\n                </DropdownMenu>\n                </Dropdown>\n                </h1>\n                </div>\n        </Collapse>\n      </div>\n    );\n  }\n  \n}\n\nexport default Demographic;"]},"metadata":{},"sourceType":"module"}