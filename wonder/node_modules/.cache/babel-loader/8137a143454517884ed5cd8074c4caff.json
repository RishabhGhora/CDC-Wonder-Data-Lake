{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhghora/Desktop/Codes/wonder/src/LineChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nconst width = 650;\nconst height = 400;\nconst margin = {\n  top: 20,\n  right: 5,\n  bottom: 20,\n  left: 35\n};\nconst red = '#eb6a5b';\nconst blue = '#52b6ca';\n\nclass LineChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cases: null,\n      // svg path command for all cases\n      // d3 helpers\n      xScale: d3.scaleTime().range([margin.left, width - margin.right]),\n      yScale: d3.scaleLinear().range([height - margin.bottom, margin.top]),\n      lineGenerator: d3.line()\n    };\n    this.xAxis = d3.axisBottom().scale(this.state.xScale).tickFormat(d3.timeFormat('%b'));\n    this.yAxis = d3.axisLeft().scale(this.state.yScale).tickFormat(d => \"\".concat(d, \"\\u2109\"));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!nextProps.data) return null; // data hasn't been loaded yet so do nothing\n\n    const data = nextProps.data;\n    const xScale = prevState.xScale,\n          yScale = prevState.yScale,\n          lineGenerator = prevState.lineGenerator; // data has changed, so recalculate scale domains\n\n    const timeDomain = d3.extent(data, d => d.date);\n    console.log(timeDomain);\n    const tempMax = d3.max(data, d => d.Cases);\n    xScale.domain(timeDomain);\n    yScale.domain([0, tempMax]); // calculate line for cases\n\n    lineGenerator.x(d => xScale(d.Date));\n    lineGenerator.y(d => yScale(d.Cases));\n    const cases = lineGenerator(data);\n    return {\n      cases\n    };\n  }\n\n  componentDidUpdate() {\n    d3.select(this.refs.xAxis).call(this.xAxis);\n    d3.select(this.refs.yAxis).call(this.yAxis);\n  }\n\n  render() {\n    return React.createElement(\"svg\", {\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: this.state.cases,\n      fill: \"none\",\n      stroke: red,\n      strokeWidth: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"g\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      ref: \"xAxis\",\n      transform: \"translate(0, \".concat(height - margin.bottom, \")\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"g\", {\n      ref: \"yAxis\",\n      transform: \"translate(\".concat(margin.left, \", 0)\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/rishabhghora/Desktop/Codes/wonder/src/LineChart.js"],"names":["React","Component","d3","width","height","margin","top","right","bottom","left","red","blue","LineChart","state","cases","xScale","scaleTime","range","yScale","scaleLinear","lineGenerator","line","xAxis","axisBottom","scale","tickFormat","timeFormat","yAxis","axisLeft","d","getDerivedStateFromProps","nextProps","prevState","data","timeDomain","extent","date","console","log","tempMax","max","Cases","domain","x","Date","y","componentDidUpdate","select","refs","call","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,MAAMC,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAG,GAAf;AACA,MAAMC,MAAM,GAAG;AAACC,EAAAA,GAAG,EAAE,EAAN;AAAUC,EAAAA,KAAK,EAAE,CAAjB;AAAoBC,EAAAA,MAAM,EAAE,EAA5B;AAAgCC,EAAAA,IAAI,EAAE;AAAtC,CAAf;AACA,MAAMC,GAAG,GAAG,SAAZ;AACA,MAAMC,IAAI,GAAG,SAAb;;AAEA,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCY,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,IADD;AACO;AACb;AACAC,MAAAA,MAAM,EAAEb,EAAE,CAACc,SAAH,GAAeC,KAAf,CAAqB,CAACZ,MAAM,CAACI,IAAR,EAAcN,KAAK,GAAGE,MAAM,CAACE,KAA7B,CAArB,CAHF;AAINW,MAAAA,MAAM,EAAEhB,EAAE,CAACiB,WAAH,GAAiBF,KAAjB,CAAuB,CAACb,MAAM,GAAGC,MAAM,CAACG,MAAjB,EAAyBH,MAAM,CAACC,GAAhC,CAAvB,CAJF;AAKNc,MAAAA,aAAa,EAAElB,EAAE,CAACmB,IAAH;AALT,KADwB;AAAA,SAShCC,KATgC,GASxBpB,EAAE,CAACqB,UAAH,GAAgBC,KAAhB,CAAsB,KAAKX,KAAL,CAAWE,MAAjC,EACLU,UADK,CACMvB,EAAE,CAACwB,UAAH,CAAc,IAAd,CADN,CATwB;AAAA,SAWhCC,KAXgC,GAWxBzB,EAAE,CAAC0B,QAAH,GAAcJ,KAAd,CAAoB,KAAKX,KAAL,CAAWK,MAA/B,EACLO,UADK,CACMI,CAAC,cAAOA,CAAP,WADP,CAXwB;AAAA;;AAchC,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AACpD,QAAI,CAACD,SAAS,CAACE,IAAf,EAAqB,OAAO,IAAP,CAD+B,CAClB;;AADkB,UAE7CA,IAF6C,GAErCF,SAFqC,CAE7CE,IAF6C;AAAA,UAG7ClB,MAH6C,GAGZiB,SAHY,CAG7CjB,MAH6C;AAAA,UAGrCG,MAHqC,GAGZc,SAHY,CAGrCd,MAHqC;AAAA,UAG7BE,aAH6B,GAGZY,SAHY,CAG7BZ,aAH6B,EAKpD;;AACA,UAAMc,UAAU,GAAGhC,EAAE,CAACiC,MAAH,CAAUF,IAAV,EAAgBJ,CAAC,IAAIA,CAAC,CAACO,IAAvB,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACA,UAAMK,OAAO,GAAGrC,EAAE,CAACsC,GAAH,CAAOP,IAAP,EAAaJ,CAAC,IAAIA,CAAC,CAACY,KAApB,CAAhB;AACA1B,IAAAA,MAAM,CAAC2B,MAAP,CAAcR,UAAd;AACAhB,IAAAA,MAAM,CAACwB,MAAP,CAAc,CAAC,CAAD,EAAIH,OAAJ,CAAd,EAVoD,CAYpD;;AACAnB,IAAAA,aAAa,CAACuB,CAAd,CAAgBd,CAAC,IAAId,MAAM,CAACc,CAAC,CAACe,IAAH,CAA3B;AACAxB,IAAAA,aAAa,CAACyB,CAAd,CAAgBhB,CAAC,IAAIX,MAAM,CAACW,CAAC,CAACY,KAAH,CAA3B;AACA,UAAM3B,KAAK,GAAGM,aAAa,CAACa,IAAD,CAA3B;AAEA,WAAO;AAACnB,MAAAA;AAAD,KAAP;AACD;;AAEDgC,EAAAA,kBAAkB,GAAG;AACnB5C,IAAAA,EAAE,CAAC6C,MAAH,CAAU,KAAKC,IAAL,CAAU1B,KAApB,EAA2B2B,IAA3B,CAAgC,KAAK3B,KAArC;AACApB,IAAAA,EAAE,CAAC6C,MAAH,CAAU,KAAKC,IAAL,CAAUrB,KAApB,EAA2BsB,IAA3B,CAAgC,KAAKtB,KAArC;AACD;;AAEDuB,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,KAAK,EAAE/C,KAAZ;AAAmB,MAAA,MAAM,EAAEC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,CAAC,EAAE,KAAKS,KAAL,CAAWC,KAApB;AAA2B,MAAA,IAAI,EAAC,MAAhC;AAAuC,MAAA,MAAM,EAAEJ,GAA/C;AAAoD,MAAA,WAAW,EAAC,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,GAAG,EAAC,OAAP;AAAe,MAAA,SAAS,yBAAkBN,MAAM,GAAGC,MAAM,CAACG,MAAlC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,MAAA,GAAG,EAAC,OAAP;AAAe,MAAA,SAAS,sBAAeH,MAAM,CAACI,IAAtB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF;AASD;;AAlD+B;;AAqDlC,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nconst width = 650;\nconst height = 400;\nconst margin = {top: 20, right: 5, bottom: 20, left: 35};\nconst red = '#eb6a5b';\nconst blue = '#52b6ca';\n\nclass LineChart extends Component {\n  state = {\n    cases: null, // svg path command for all cases\n    // d3 helpers\n    xScale: d3.scaleTime().range([margin.left, width - margin.right]),\n    yScale: d3.scaleLinear().range([height - margin.bottom, margin.top]),\n    lineGenerator: d3.line(),\n  };\n\n  xAxis = d3.axisBottom().scale(this.state.xScale)\n    .tickFormat(d3.timeFormat('%b'));\n  yAxis = d3.axisLeft().scale(this.state.yScale)\n    .tickFormat(d => `${d}â„‰`);\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!nextProps.data) return null; // data hasn't been loaded yet so do nothing\n    const {data} = nextProps;\n    const {xScale, yScale, lineGenerator} = prevState;\n\n    // data has changed, so recalculate scale domains\n    const timeDomain = d3.extent(data, d => d.date);\n    console.log(timeDomain);\n    const tempMax = d3.max(data, d => d.Cases);\n    xScale.domain(timeDomain);\n    yScale.domain([0, tempMax]);\n\n    // calculate line for cases\n    lineGenerator.x(d => xScale(d.Date));\n    lineGenerator.y(d => yScale(d.Cases));\n    const cases = lineGenerator(data);\n\n    return {cases};\n  }\n\n  componentDidUpdate() {\n    d3.select(this.refs.xAxis).call(this.xAxis);\n    d3.select(this.refs.yAxis).call(this.yAxis);\n  }\n\n  render() {\n\n    return (\n      <svg width={width} height={height}>\n        <path d={this.state.cases} fill='none' stroke={red} strokeWidth='2' />\n        <g>\n          <g ref='xAxis' transform={`translate(0, ${height - margin.bottom})`} />\n          <g ref='yAxis' transform={`translate(${margin.left}, 0)`} />\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}